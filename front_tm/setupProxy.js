const { createProxyMiddleware } = require("http-proxy-middleware");

console.log("üöÄ setupProxy.js –¥–ª—è FastAPI –∑–∞–≥—Ä—É–∂–µ–Ω!");

module.exports = function (app) {
  // Middleware –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ CSP –∑–∞–≥–æ–ª–æ–≤–∫–∞
  app.use((req, res, next) => {
    res.setHeader(
      "Content-Security-Policy",
      "default-src 'self'; style-src 'self' https://www.gstatic.com; script-src 'self';"
    );
    next();
  });

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –¥–ª—è /tasks —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
  app.use(
    "/tasks",
    createProxyMiddleware({
      target: "http://localhost:8000",
      changeOrigin: true,
      logLevel: "debug",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
      },
      onProxyReq: (proxyReq, req, res) => {
        console.log(`üîÑ Tasks –∑–∞–ø—Ä–æ—Å:`);
        console.log(`   Frontend URL: ${req.originalUrl}`);
        console.log(`   Backend URL: http://localhost:8000${req.url}`);
      },
      onProxyRes: (proxyRes, req, res) => {
        console.log(`‚úÖ Tasks –æ—Ç–≤–µ—Ç: ${proxyRes.statusCode}`);
        console.log(`   Content-Type: ${proxyRes.headers["content-type"]}`);
      },
      onError: (err, req, res) => {
        console.error("‚ùå Tasks –ø—Ä–æ–∫—Å–∏ –æ—à–∏–±–∫–∞:", err);
        res.status(500).json({ error: "Tasks proxy error" });
      },
    })
  );

  // –ü—Ä–æ–∫—Å–∏ –¥–ª—è /users
  app.use(
    "/users",
    createProxyMiddleware({
      target: "http://localhost:8000",
      changeOrigin: true,
      logLevel: "debug",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
      },
      onProxyReq: (proxyReq, req, res) => {
        console.log(`üîÑ Users –∑–∞–ø—Ä–æ—Å:`);
        console.log(`   Frontend URL: ${req.originalUrl}`);
        console.log(`   Backend URL: http://localhost:8000${req.url}`);
      },
      onProxyRes: (proxyRes, req, res) => {
        console.log(`‚úÖ Users –æ—Ç–≤–µ—Ç: ${proxyRes.statusCode}`);
      },
      onError: (err, req, res) => {
        console.error("‚ùå Users –ø—Ä–æ–∫—Å–∏ –æ—à–∏–±–∫–∞:", err);
        res.status(500).json({ error: "Users proxy error" });
      },
    })
  );

  // –ü—Ä–æ–∫—Å–∏ –¥–ª—è /login
  app.use(
    "/login",
    createProxyMiddleware({
      target: "http://localhost:8000",
      changeOrigin: true,
      logLevel: "debug",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
      },
      onProxyReq: (proxyReq, req, res) => {
        console.log(`üîÑ Login –∑–∞–ø—Ä–æ—Å:`);
        console.log(`   Frontend URL: ${req.originalUrl}`);
        console.log(`   Backend URL: http://localhost:8000${req.url}`);
      },
      onProxyRes: (proxyRes, req, res) => {
        console.log(`‚úÖ Login –æ—Ç–≤–µ—Ç: ${proxyRes.statusCode}`);
      },
      onError: (err, req, res) => {
        console.error("‚ùå Login –ø—Ä–æ–∫—Å–∏ –æ—à–∏–±–∫–∞:", err);
        res.status(500).json({ error: "Login proxy error" });
      },
    })
  );

  // –ü—Ä–æ–∫—Å–∏ –¥–ª—è /api (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –±—ã–ª–æ)
  app.use(
    "/api",
    createProxyMiddleware({
      target: "http://localhost:8000",
      changeOrigin: true,
      pathRewrite: {
        "^/api": "",
      },
      logLevel: "debug",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
      },
      onProxyReq: (proxyReq, req, res) => {
        console.log(`üîÑ API –∑–∞–ø—Ä–æ—Å:`);
        console.log(`   Frontend URL: ${req.originalUrl}`);
        console.log(
          `   Backend URL: http://localhost:8000${req.url.replace("/api", "")}`
        );
      },
      onProxyRes: (proxyRes, req, res) => {
        console.log(`‚úÖ API –æ—Ç–≤–µ—Ç: ${proxyRes.statusCode}`);
      },
      onError: (err, req, res) => {
        console.error("‚ùå API –ø—Ä–æ–∫—Å–∏ –æ—à–∏–±–∫–∞:", err);
        res.status(500).json({ error: "API proxy error" });
      },
    })
  );
};
